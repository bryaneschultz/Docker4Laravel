version: "3.7"

services:
  server:
    build:
      context: ./docker/images/
      dockerfile: nginx/Dockerfile
      args:
        TZ: "${TIMEZONE}"
    container_name: nginx
    depends_on:
      - app
    environment:
      SERVICE_NAME: server
      SERVICE_TAGS: "${SERVICE_TAGS}"
    networks:
      - app-network
    ports:
      - 80:80
      - 443:443
    tty: true
    restart: unless-stopped
    volumes:
      - ./docker/logs:/var/log/nginx
#      - ./docker/ssl:/etc/ssl/:ro
      - ./docker/images/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf:ro
      - .:/var/www/example.com:ro
      - phpmyadmin:/var/www/html:ro
#---------------------------------------------------------------------#
  app:
    build:
      context: ./docker/images/
      dockerfile: php-fpm/Dockerfile
      args:
        TZ: "${TIMEZONE}"
    container_name: php
    depends_on:
      - database
    env_file:
      - .env
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: "${SERVICE_TAGS}"
    networks:
      - app-network
    restart: unless-stopped
    tty: true
    volumes:
      - ./docker/images/php-fpm/conf/dev-local.ini:/usr/local/etc/php/php.ini:ro
      - ./docker/logs:/var/log/php
      - .:/var/www/example.com
    working_dir: /var/www/example.com
#---------------------------------------------------------------------#
  database:
    build:
      context: ./docker/images/
      dockerfile: mysql/Dockerfile
      args:
        TZ: "${TIMEZONE}"
    container_name: mysql
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_NAME: mysql
      SERVICE_TAGS: "${SERVICE_TAGS}"
    networks:
      - app-network
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ./docker/images/mysql/conf.d/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ./docker/images/mysql/mysql.conf.d/my.cnf:/etc/mysql/mysql.conf.d/my.cnf:ro
      - ./docker/logs:/var/log/mysql
      - data:/var/lib/mysql
#---------------------------------------------------------------------#
  cache:
    build:
      context: ./docker/images/
      dockerfile: redis/Dockerfile
      args:
        TZ: "${TIMEZONE}"
    container_name: redis
    depends_on:
      - app
    environment:
      SERVICE_NAME: redis
      SERVICE_TAGS: "${SERVICE_TAGS}"
    networks:
      - app-network
    tty: true
    restart: always
    sysctls:
      - net.core.somaxconn=65535
    volumes:
      - ./docker/images/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis:/data
    working_dir: /data
#---------------------------------------------------------------------#
  phpmyadmin:
    image: phpmyadmin:fpm-alpine
    container_name: phpmyadmin
    depends_on:
      - database
    env_file:
      - .env
    environment:
      PMA_ARBITRARY: 1
      PMA_ABSOLUTE_URI: ${PMA_ABSOLUTE_URI}
      PMA_HOST: ${PMA_HOST}
      PMA_PASSWORD: ${PMA_PASSWORD}
      PMA_PORT: 3306
      PMA_USER: ${PMA_USER}
      SERVICE_NAME: phpmyadmin
      SERVICE_TAGS: "${SERVICE_TAGS}"
    networks:
      - app-network
    restart: always
    volumes:
#      - ./docker/images/ssl:/etc/ssl/:ro
      - phpmyadmin:/var/www/html
      - sessions:/sessions
#---------------------------------------------------------------------#
networks:
  app-network:
    driver: bridge
volumes:
  data:
    driver: local
  phpmyadmin:
    driver: local
  redis:
    driver: local
  sessions:
    driver: local
